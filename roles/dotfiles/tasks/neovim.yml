---
- name: Installing neovim formulas
  homebrew:
    name: "{{ neovim_formulas }}"
    state: present
  when: neovim_formulas | list

- name: Installing neovim plugins
  shell: nvim -c "Lazy! install" +qa &> /dev/null < /dev/tty
  changed_when: false

- name: Installing neovim's node packages globally
  npm:
    name: "{{ item.name }}"
    version: "{{ item.version }}"
    global: yes
    state: latest
  with_items: "{{ neovim_node_packages }}"

- name: Checking Installed Python interpreters
  command: pyenv versions
  register: pyenv_versions
  changed_when: false
  when: "'pyenv' in neovim_formulas"

- name: Storing pyenv root
  command: pyenv root
  register: pyenv_root
  changed_when: false
  when: "'pyenv' in neovim_formulas"

- name: Installing Python interpreters for neovim
  command: pyenv install {{ item.version }}
  when: not (item.version in (pyenv_versions.stdout_lines | map('trim') | list))
  with_items: "{{ neovim_python }}"

- name: Creating neovim's Python virtualenvs
  command: pyenv virtualenv {{ item.version }} {{ item.venv }}
  when: not (item.venv in (pyenv_versions.stdout_lines | map('trim') | list))
  with_items: "{{ neovim_python }}"

- name: Installing Python neovim host clients
  pip:
    name:
      - pynvim
      - neovim
      - msgpack
    executable: "{{ pyenv_root.stdout }}/versions/{{ item.version }}/envs/{{ item.venv }}/bin/pip"
    state: latest
  with_items: "{{ neovim_python }}"

- name: Installing Ruby interpreter for neovim
  command: asdf install ruby

- name: Rehashing environments
  command: asdf reshim

- name: Updating neovim plugins
  shell: nvim -c "Lazy! sync" +qa &> /dev/null < /dev/tty
  changed_when: false
  tags:
    - upgrade
